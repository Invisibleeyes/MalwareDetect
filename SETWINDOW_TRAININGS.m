

for N=[3 4 5]
    malwarewindowlist = [];
    for k = 1:numel(malwareLogFiles)
        fprintf('making malware windowlist with N = %d, %d\n',N,k/malware_numfiles);
        
        dataArray = malwareLogFiles(k).contents;
        len = numel(dataArray)-N+1;
        singlemalwarewindowlist = zeros(len,N);
        
        for i=1:len
            temp = dataArray(i:i+N-1);
            singlemalwarewindowlist(i,:) = temp';
        end
        if N == 3
            malwareLogFiles(k).window3 = singlemalwarewindowlist;
        elseif N==5
            malwareLogFiles(k).window5 = singlemalwarewindowlist;
        elseif N==4
            malwareLogFiles(k).window4 = singlemalwarewindowlist;
        end
        malwarewindowlist = [malwarewindowlist; singlemalwarewindowlist];
    end
    
    benignwindowlist = [];
    for k = 1:numel(benignLogFiles)
        singlebenignwindowlist = [];
        fprintf('making benign windowlist with N = %d, %d\n',N,k/benign_numfiles);
        dataArray = benignLogFiles(k).contents;
        len = numel(dataArray)-N+1;
        singlebenignwindowlist = zeros(len,N);
        
        for i=1:numel(dataArray)-N+1
            temp = dataArray(i:i+N-1);
            singlebenignwindowlist(i,:) = temp';
        end
        if N == 3
            benignLogFiles(k).window3 = singlebenignwindowlist;
        elseif N==5
            benignLogFiles(k).window5 = singlebenignwindowlist;
        elseif N==4
            benignLogFiles(k).window4 = singlebenignwindowlist;
        end
        benignwindowlist = [benignwindowlist; singlebenignwindowlist];
        
        
    end
    
    union_unique_seq = unique([malwarewindowlist ; benignwindowlist], 'rows');
    union_unique_seq(:,N+1:N+2) = 0;
    
    %   malwareseqidlist = [];
    
    for k = 1:numel(malwareLogFiles)
        fprintf('giving id to each malware window with N = %d, %d\n',N,k/malware_numfiles);
        if N == 3
            singlewindowlist = malwareLogFiles(k).window3;
        elseif N==5
            singlewindowlist = malwareLogFiles(k).window5;
        elseif N==4
            singlewindowlist = malwareLogFiles(k).window4;
        end
        
        mallength = numel(singlewindowlist(:,1));
        singlemalware_seq_id = zeros(mallength,1);
        
        for i=1:mallength
            [res1 index1] = ismember(singlewindowlist(i,:), union_unique_seq(:,1:N), 'rows');
            singlemalware_seq_id(i) = index1;
        end
        
        singlemalware_summary = unique(singlemalware_seq_id);
        singlemalware_summary(:,2) = 0;
        for j=1:numel(singlemalware_summary(:,2))
            occ = singlemalware_summary(j,1);
            singlemalware_summary(j,2) = nnz(singlemalware_seq_id == occ);
            union_unique_seq(occ, N+2) = union_unique_seq(occ, N+2) + 1;
        end
        
        if N == 3
            malwareLogFiles(k).window3 = singlemalware_seq_id;
            malwareLogFiles(k).window3summary = singlemalware_summary;
            
        elseif N==5
            malwareLogFiles(k).window5 = singlemalware_seq_id;
            malwareLogFiles(k).window5summary = singlemalware_summary;
            
        elseif N==4
            malwareLogFiles(k).window4 = singlemalware_seq_id;
            malwareLogFiles(k).window4summary = singlemalware_summary;
            
        end
    end
    
    
    for k = 1:numel(benignLogFiles)
        fprintf('giving id to each benign window with N = %d, %d\n',N,k/benign_numfiles);
        if N == 3
            singlewindowlist = benignLogFiles(k).window3;
        elseif N==5
            singlewindowlist = benignLogFiles(k).window5;
        elseif N==4
            singlewindowlist = benignLogFiles(k).window4;
        elseif N==10
            singlewindowlist = benignLogFiles(k).window10;
        end
        benignlength = numel(singlewindowlist(:,1));
        singlebenign_seq_id = zeros(benignlength,1);
        
        for i=1:benignlength
            [res1 index1] = ismember(singlewindowlist(i,:), union_unique_seq(:,1:N), 'rows');
            singlebenign_seq_id(i) = index1;
        end
        
        singlebenign_summary = unique(singlebenign_seq_id);
        singlebenign_summary(:,2) = 0;
        for j=1:numel(singlebenign_summary(:,2))
            occ = singlebenign_summary(j,1);
            singlebenign_summary(j,2) = nnz(singlebenign_seq_id == occ);
            union_unique_seq(occ, N+1) =  union_unique_seq(occ, N+1) +1;
            
        end
        
        if N == 3
            benignLogFiles(k).window3 = singlebenign_seq_id;
            benignLogFiles(k).window3summary = singlebenign_summary;
            
        elseif N==4
            benignLogFiles(k).window4 = singlebenign_seq_id;
            benignLogFiles(k).window4summary = singlebenign_summary;
            
        elseif N==5
            benignLogFiles(k).window5 = singlebenign_seq_id;
            benignLogFiles(k).window5summary = singlebenign_summary;
        end
    end
    
    if N == 3
        union_3 = union_unique_seq;
    elseif N==5
        union_5 = union_unique_seq;
    elseif N==4
        union_4 = union_unique_seq;
    end
    
end
clearvars benignlength benignwindowlist dataArray i index1 j k len mallength malwarewindowlist N occ res1 singlebenign_seq_id singlebenign_summary singlebenignwindowlist singlemalware_seq_id singlemalware_summary singlemalwarewindowlist singlewindowlist temp union_unique_seq;



