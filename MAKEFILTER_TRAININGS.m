for N=[3 4 5]
    if N == 3
        uN = union_3;
    elseif N == 4
        uN = union_4;
    elseif N == 5;
        uN = union_5;
    end
    u = zeros(numel(uN(:,1)),3);
    u(:,1) = [1:numel(uN(:,1))]';
    u(:,2:3) = uN(:,N+1:N+2);
    u(:,2) = u(:,2).*(100/benign_numfiles);
    u(:,3) = u(:,3).*(100/malware_numfiles);
    u = uint16(u);
    
    
    blacklist = [];
    %put finding blacklist function
    for i=1:length(u)
        if u(i,2) < u(i,3)
            blacklist = [blacklist u(i,1)];
        end
    end
    %end
    
    detection = zeros(malware_numfiles, 2);
    for k = 1:numel(malwareLogFiles)
        detection(k,1) = k;
        if N == 3
            singlesum = malwareLogFiles(k).window3;
        elseif N==5
            singlesum = malwareLogFiles(k).window5;
        elseif N==4
            singlesum = malwareLogFiles(k).window4;
        end
        
        res = sum(ismember(singlesum(:,1),blacklist));
        detection(k,2)=res;
    end
    
    falsepos = zeros(benign_numfiles, 2);
    for k = 1:benign_numfiles
        
        falsepos(k,1) = k;
        if N == 3
            singlesum = benignLogFiles(k).window3;
        elseif N==5
            singlesum = benignLogFiles(k).window5;
        elseif N==4
            singlesum = benignLogFiles(k).window4;
        end
        
        res = sum(ismember(singlesum(:,1),blacklist));
        falsepos(k,2) = res;
    end

    %arbitrary decide threshold
    
    
    TruePos = nnz(detection(:,2)>threshold)*(100/malware_numfiles);
    FalsePos = nnz(falsepos(:,2)>threshold)*(100/benign_numfiles);
    
    fprintf('Window size %d, True positive %2f, False postitive %2f\n',N,TruePos, FalsePos);
end


clearvars N i k u uN;
